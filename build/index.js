(()=>{"use strict";const e=window.React,r=window.wp.hooks,t=window.wp.compose,o=window.wp.blockEditor,a=window.wp.components,n=window.wp.i18n,l=window.wp.escapeHtml,i=(0,t.createHigherOrderComponent)((r=>t=>{if("core/button"!==t.name)return(0,e.createElement)(r,{...t});const{attributes:l,setAttributes:i}=t,{ariaLabel:s,hideFromScreenReaders:c}=l;return(0,e.createElement)(e.Fragment,null,(0,e.createElement)(r,{...t}),(0,e.createElement)(o.InspectorControls,null,(0,e.createElement)(a.PanelBody,{title:(0,n.__)("Accessibility Settings","unbox"),initialOpen:!0},(0,e.createElement)(a.TextControl,{label:(0,n.__)("ARIA Label","unbox"),value:s||"",onChange:e=>i({ariaLabel:e}),help:(0,n.__)("Add a descriptive label for screen readers","unbox")}),(0,e.createElement)(a.ToggleControl,{label:(0,n.__)("Hide from Screen Readers","unbox"),checked:c||!1,onChange:e=>i({hideFromScreenReaders:e}),help:(0,n.__)("Toggle to hide this button from screen readers","unbox")}))))}),"withAriaLabelControls");(0,r.addFilter)("editor.BlockEdit","unbox-button-aria-labels/with-aria-label-controls",i),(0,r.addFilter)("blocks.registerBlockType","unbox-button-aria-labels/add-aria-label-attributes",((e,r)=>"core/button"!==r?e:{...e,attributes:{...e.attributes,ariaLabel:{type:"string",default:""},hideFromScreenReaders:{type:"boolean",default:!1}}})),(0,r.addFilter)("blocks.getSaveElement","unbox-button-aria-labels/modify-button-save",((e,r,t)=>{if("core/button"!==r.name)return e;const{ariaLabel:o,hideFromScreenReaders:a}=t;if(!o&&!a)return e;const n={...e};if(n.props&&n.props.children){const e=Array.isArray(n.props.children)?n.props.children:[n.props.children];n.props.children=e.map((e=>e&&e.props&&e.props.className&&e.props.className.includes("wp-block-button__link")?{...e,props:{...e.props,"aria-label":o?(0,l.escapeAttribute)(o):void 0,"aria-hidden":a?"true":void 0}}:e))}return n}))})();