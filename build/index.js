(()=>{"use strict";const e=window.wp.hooks,r=window.wp.compose,t=window.wp.blockEditor,o=window.wp.components,a=window.wp.i18n,n=window.wp.escapeHtml,i=window.ReactJSXRuntime,s=(0,r.createHigherOrderComponent)(e=>r=>{if("core/button"!==r.name)return(0,i.jsx)(e,{...r});const{attributes:n,setAttributes:s}=r,{ariaLabel:l,hideFromScreenReaders:d}=n;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e,{...r}),(0,i.jsx)(t.InspectorControls,{children:(0,i.jsxs)(o.PanelBody,{title:(0,a.__)("Accessibility Settings","unbox"),initialOpen:!0,children:[(0,i.jsx)(o.TextControl,{label:(0,a.__)("ARIA Label","unbox"),value:l||"",onChange:e=>s({ariaLabel:e}),help:(0,a.__)("Add a descriptive label for screen readers","unbox")}),(0,i.jsx)(o.ToggleControl,{label:(0,a.__)("Hide from Screen Readers","unbox"),checked:d||!1,onChange:e=>s({hideFromScreenReaders:e}),help:(0,a.__)("Toggle to hide this button from screen readers","unbox")})]})})]})},"withAriaLabelControls");(0,e.addFilter)("editor.BlockEdit","unbox-button-aria-labels/with-aria-label-controls",s),(0,e.addFilter)("blocks.registerBlockType","unbox-button-aria-labels/add-aria-label-attributes",(e,r)=>"core/button"!==r?e:{...e,attributes:{...e.attributes,ariaLabel:{type:"string",default:""},hideFromScreenReaders:{type:"boolean",default:!1}}}),(0,e.addFilter)("blocks.getSaveElement","unbox-button-aria-labels/modify-button-save",(e,r,t)=>{if("core/button"!==r.name)return e;const{ariaLabel:o,hideFromScreenReaders:a}=t;if(!o&&!a)return e;const i={...e};if(i.props&&i.props.children){const e=Array.isArray(i.props.children)?i.props.children:[i.props.children];i.props.children=e.map(e=>e&&e.props&&e.props.className&&e.props.className.includes("wp-block-button__link")?{...e,props:{...e.props,"aria-label":o?(0,n.escapeAttribute)(o):void 0,"aria-hidden":a?"true":void 0}}:e)}return i})})();