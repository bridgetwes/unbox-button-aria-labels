(()=>{"use strict";const e=window.wp.hooks,r=window.wp.compose,o=window.wp.blockEditor,t=window.wp.components,n=window.wp.i18n,a=window.ReactJSXRuntime,i=(0,r.createHigherOrderComponent)((e=>r=>{if("core/button"!==r.name)return(0,a.jsx)(e,{...r});const{attributes:i,setAttributes:s}=r,{ariaLabel:l,hideFromScreenReaders:d}=i;return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e,{...r}),(0,a.jsx)(o.InspectorControls,{children:(0,a.jsxs)(t.PanelBody,{title:(0,n.__)("Accessibility Settings","unbox"),initialOpen:!0,children:[(0,a.jsx)(t.TextControl,{label:(0,n.__)("ARIA Label","unbox"),value:l||"",onChange:e=>s({ariaLabel:e}),help:(0,n.__)("Add a descriptive label for screen readers","unbox")}),(0,a.jsx)(t.ToggleControl,{label:(0,n.__)("Hide from Screen Readers","unbox"),checked:d||!1,onChange:e=>s({hideFromScreenReaders:e}),help:(0,n.__)("Toggle to hide this button from screen readers","unbox")})]})})]})}),"withAriaLabelControls");(0,e.addFilter)("editor.BlockEdit","unbox-button-aria-labels/with-aria-label-controls",i),(0,e.addFilter)("blocks.registerBlockType","unbox-button-aria-labels/add-aria-label-attributes",((e,r)=>"core/button"!==r?e:{...e,attributes:{...e.attributes,ariaLabel:{type:"string",default:""},hideFromScreenReaders:{type:"boolean",default:!1}}})),(0,e.addFilter)("blocks.getSaveElement","unbox-button-aria-labels/modify-button-save",((e,r,o)=>{if("core/button"!==r.name)return e;const{ariaLabel:t,hideFromScreenReaders:n}=o;if(!t&&!n)return e;const a={...e};if(a.props&&a.props.children){const e=Array.isArray(a.props.children)?a.props.children:[a.props.children];a.props.children=e.map((e=>e&&e.props&&e.props.className&&e.props.className.includes("wp-block-button__link")?{...e,props:{...e.props,"aria-label":t||void 0,"aria-hidden":n?"true":void 0}}:e))}return a}))})();